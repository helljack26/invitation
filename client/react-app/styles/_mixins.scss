@import "./variables.scss";

// Input
@mixin mainInput() {
	height: 64px;
	outline: none;
	border: none;
	background-color: white;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: row;
	border-radius: 40px;
	font-family: $fRegular;
	font-size: 14px;
	padding-left: 24px;
	padding-right: 24px;
	transition: $mainTransition;
	&:focus-visible {
		outline: none;
	}
	&:focus {
		outline: none;
		border: none;
	}
	&:active {
		outline: none;
		border: none;
	}
	&:hover {
		outline: none;
		border: none;
	}
	&::placeholder {
		color: $cBlackSecond;
		user-select: none;
	}
}
@mixin mainInputIcon() {
	background-size: contain;
	background-repeat: no-repeat;
	content: "";
	position: absolute;
	user-select: none;
	pointer-events: none;
	top: 18px;
	right: 16px;
}

@mixin mainInputErrorMessage() {
	font-size: 14px;
	font-family: $fRegular;
	position: absolute;
	bottom: -44px;
	left: 0px;
	line-height: 20px;
	user-select: none;
}

//////// Buttons //////////
@mixin buttonRounded() {
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 16px;
	font-family: $fBold;
	height: 48px;
	user-select: none;
	transition: $mainTransition;
	border-radius: 40px;
}

////////// Mask //////////
@mixin maskIcon() {
	width: 12px;
	height: 12px;
	mask-size: cover;
	mask-repeat: no-repeat;
	mask-position: center;
}

//////// Text //////////
@mixin headerBold50() {
	font-family: $fBold;
	font-size: 50px;
	color: $cBlack;
	line-height: 160%;
	@media screen and (max-width: 1200px) {
		font-size: 47px;
	}
	@media screen and (max-width: 1100px) {
		font-size: 43px;
	}
	@media screen and (max-width: 992px) {
		font-size: 35px;
	}
	@media screen and (max-width: 768px) {
		font-size: 30px;
	}
	@media screen and (max-width: 576px) {
		font-size: 24px;
	}
}
@mixin headerBold40() {
	@media screen and (min-width: 1500px) {
		font-size: 45px;
	}
	font-family: $fBold;
	font-size: 40px;
	color: $cBlack;
	line-height: 140%;
	@media screen and (max-width: 992px) {
		font-size: 37px;
	}
	@media screen and (max-width: 768px) {
		font-size: 34px;
	}
	@media screen and (max-width: 576px) {
		font-size: 31px;
	}
	@media screen and (max-width: 450px) {
		font-size: 28px;
	}
}
@mixin headerBold24() {
	font-family: $fBold;
	font-size: 24px;
	color: #1e1a20;
	line-height: 34px;
}
@mixin headerBold20() {
	font-family: $fBold;
	font-size: 20px;
	color: $cBlack;
	line-height: 28px;
}
@mixin headerBold14() {
	font-family: $fBold;
	font-size: 14px;
	color: $cBlack;
	line-height: 20px;
}

@mixin plainText24() {
	font-family: $fRegular;
	font-size: 24px;
	line-height: 36px;
	color: $cBlack;
	@media (max-width: 992px) {
		line-height: 33px;
		font-size: 23px;
	}
	@media (max-width: 768px) {
		line-height: 30px;
		font-size: 22px;
	}
	@media (max-width: 576px) {
		line-height: 28px;
		font-size: 20px;
	}
	@media (max-width: 450px) {
		font-size: 18px;
	}
	@media (max-width: 375px) {
		font-size: 17px;
	}
}
@mixin plainText18() {
	font-family: $fRegular;
	font-size: 18px;
	line-height: 32px;
	color: $cBlack;

	@media (max-width: 992px) {
		font-size: 17px;
	}
	@media (max-width: 576px) {
		font-size: 16px;
	}
	@media (max-width: 450px) {
		font-size: 15px;
	}
}
@mixin plainText16() {
	font-family: $fRegular;
	font-size: 16px;
	line-height: 140%;
	color: $cBlack;
	@media (max-width: 1140px) {
		font-size: 15.5px;
	}
	@media (max-width: 1040px) {
		font-size: 15px;
	}
	@media (max-width: 992px) {
		font-size: 14.5px;
	}
	@media (max-width: 768px) {
		font-size: 14px;
	}
	@media (max-width: 400px) {
		font-size: 13px;
	}
	@media (max-width: 350px) {
		font-size: 12.5px;
	}
}
@mixin plainText14() {
	font-family: $fRegular;
	font-size: 14px;
	line-height: 24px;
	color: $cBlack;
}
@mixin plainText13() {
	font-family: $fRegular;
	font-size: 13px;
	line-height: 24px;
	color: $cBlack;
}
// Custom SVG encoded as a data URI.
// Note: The XML declaration and comments have been removed for brevity.
// Shape 1 – Original SVG background
$custom-svg-button: "data:image/svg+xml,%3Csvg%20version='1.1'%20id='svg1'%20width='62.955662'%20height='15.671738'%20viewBox='0%200%2062.955662%2015.671738'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:svg='http://www.w3.org/2000/svg'%3E%3Cdefs%20id='defs1'/%3E%3Cg%20id='g14'%20transform='matrix(2.9088361,-3.2389591,3.2389591,2.9088361,-325.2915,-4.2212396)'%20style='fill:%233a865b;fill-opacity:1'%3E%3Cpath%20style='fill:%233a865b;fill-opacity:1'%20d='m%2054.57826,67.559114%20c%20-1.913377,-2.932743%20-7.04134,-7.12586%20-7.022649,-8.416316%200.04496,-3.104229%201.462816,-3.737719%209.616957,6.129591%202.337483,2.828583%20-1.051148,4.652013%20-2.594308,2.286725z'%3E%3C/path%3E%3C/g%3E%3C/svg%3E";

// Shape 2 – Second SVG background (URL-encoded version of your second SVG)
$custom-svg-button2: "data:image/svg+xml,%3Csvg%20version='1.1'%20id='svg1'%20width='44.263031'%20height='13.240067'%20viewBox='0%200%2044.263031%2013.240067'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:svg='http://www.w3.org/2000/svg'%3E%3Cdefs%20id='defs1'/%3E%3Cg%20id='g14'%20transform='matrix(2.9088361,-3.2389591,3.2389591,2.9088361,-336.12958,-8.7269756)'%20style='fill:%233a865b;fill-opacity:1'%3E%3Cpath%20style='fill:%233a865b;fill-opacity:1'%20d='m%2053.991389,67.298704%20c%20-2.710727,-2.680664%20-6.103095,-5.743465%20-5.259549,-7.148545%201.169058,-1.94728%202.678489,0.125329%207.249845,5.187037%201.550121,1.716397%20-1.222657,2.720633%20-1.990296,1.961508z'%3E%3C/path%3E%3C/g%3E%3C/svg%3E";

// Shape 3 – Third SVG background (URL-encoded version of your third SVG)
$custom-svg-button3: "data:image/svg+xml,%3Csvg%20version='1.1'%20id='svg1'%20width='55.025978'%20height='14.735199'%20viewBox='0%200%2055.025978%2014.735199'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:svg='http://www.w3.org/2000/svg'%3E%3Cdefs%20id='defs1'/%3E%3Cg%20id='g14'%20transform='matrix(2.9088361,-3.2389591,3.2389591,2.9088361,-327.30791,-6.4459879)'%20style='fill:%233a865b;fill-opacity:1'%3E%3Cpath%20style='fill:%233a865b;fill-opacity:1'%20d='m%2053.37963,66.436102%20c%20-1.913377,-2.932743%20-6.852154,-6.344462%20-6.18294,-7.269659%201.87316,-2.589669%200.91617,-3.28831%209.513272,6.195554%201.553302,1.713519%20-1.787172,3.439393%20-3.330332,1.074105z'%3E%3C/path%3E%3C/g%3E%3C/svg%3E";

@mixin button-custom($shape: 1) {
	// Initialize $svg with the default shape (shape 1)
	$svg: $custom-svg-button;

	// Override $svg if a different shape is specified
	@if $shape == 2 {
		$svg: $custom-svg-button2;
	} @else if $shape == 3 {
		$svg: $custom-svg-button3;
	}

	display: inline-block;
	padding: 1rem 2rem;
	position: relative;
	color: #fff;
	border: none;
	text-decoration: none;
	cursor: pointer;

	// Apply the chosen SVG as a background image
	background-image: url("#{$svg}");
	background-repeat: no-repeat;
	background-size: contain; // Change to "cover" or set explicit dimensions if needed.
	background-position: center;
	transition: all 0.3s ease-in-out;
	font-family: $fRegular;

	&:hover {
		filter: brightness(0.8);
	}
}

// Helper function: Converts a color to a URL‑encoded string.
// If given a color, it interpolates to a string and removes the "#"
// (replaced with "%23" for URL encoding).

// Helper function: encode a hex color for use in data URIs.
@function encode-color($color) {
	@if type-of($color) == "color" {
		$color-string: "#{$color}";
		@return "%23" + str-slice($color-string, 2);
	} @else if type-of($color) == "string" {
		@if str-index($color, "#") {
			@return "%23" + str-slice($color, 2);
		}
		@return $color;
	}
	@return $color;
}

// Custom SVG encoded as a data URI.
// The provided SVG has been URL-encoded to be used as a background-image.
// Note: We removed the XML declaration and comments for brevity.
$custom-svg: "data:image/svg+xml,%3Csvg%20version='1.1'%20id='svg1'%20width='100'%20height='167.04778'%20viewBox='0%200%20100%20167.04778'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:svg='http://www.w3.org/2000/svg'%3E%3Cdefs%20id='defs1'/%3E%3Cg%20id='g1'%20transform='translate(-13.24938,32.855014)'%3E%3Cg%20id='g14'%20transform='matrix(2.9088361,-3.2389591,3.2389591,2.9088361,-291.28172,42.601296)'%20style='fill:%233a865b;fill-opacity:1'%3E%3Cpath%20style='fill:%233a865b;fill-opacity:1'%20d='m%2071.091761,58.243902%20c%20-1.85792,-0.355837%20-9.43184,-3.548449%20-13.72638,-5.786038%20-8.993984,-4.686148%20-6.293754,-7.192033%202.90514,-2.696045%201.87141,0.914658%204.69856,2.220187%206.28256,2.901176%205.55294,2.3873%206.08813,2.652265%207.12,3.524984%201.18743,1.004282%201.31046,1.615438%200.42104,2.091443%20-0.701,0.375162%20-0.86842,0.373181%20-3.00236,-0.03552%20z'%3E%3C/path%3E%3Cpath%20style='fill:%233a865b;fill-opacity:1'%20d='m%2053.448162,64.958993%20c%20-2.938802,-1.904058%20-7.022649,-6.798357%20-7.022649,-8.416316%200,-3.104554%206.048552,0.716736%209.584668,6.055302%202.02633,3.059199%200.57702,4.394804%20-2.562019,2.361014%20z'%3E%3C/path%3E%3Cpath%20style='fill:%233a865b;fill-opacity:1'%20d='m%2042.536946,78.850687%20c%20-1.300593,-1.359244%20-4.865421,-10.700745%20-5.6237,-14.736708%20-0.915666,-4.873658%201.922965,-5.127657%203.813136,-0.341196%204.730218,11.978278%205.574817,19.011877%201.810564,15.077904%20z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E";

// Mixin: Apply the custom SVG to both sides of a header,
// with the left side rotated 180 deg.
@mixin custom-svg-decorated-header(
	$svg: $custom-svg,
	$size: 100px,
	// The width & height of the pseudo-element container
	$offset: 12px // Gap between header text and decorative elements
) {
	position: relative;
	text-align: center;
	// Padding ensures the header text doesn't overlap the pseudo-elements.
	padding-left: calc(#{$size} + #{$offset});
	padding-right: calc(#{$size} + #{$offset});

	// Base pseudo-element styles.
	&::before,
	&::after {
		content: "";
		position: absolute;
		top: 50%;
		width: $size;
		height: $size;
		background-image: url("#{$svg}");
		background-repeat: no-repeat;
		background-size: contain;
	}

	// Left side: rotate 180 deg using CSS transform.
	&::before {
		right: 80%;
		margin-right: $offset;
		transform: translateY(-50%) rotate(180deg);
	}

	// Right side: no rotation.
	&::after {
		left: 80%;
		margin-left: $offset;
		transform: translateY(-50%);
	}
}
